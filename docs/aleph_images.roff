Modules Diagram:
.PS
down
IP: box "IP"; move 0.1
RAM: box "RAM"; move 0.1
CROM: box "CROM"; move 0.1
KEY: box "KEY"; move 0.1
move to IP.n right 1 down 0
A: box "A/B"; move 0.1
ALU: box "ALU"; move 0.1
SP: box "SP"; move 0.1
MEM: box "MEM"; move 0.1
move to IP.n up 0.1 right 0.5 up 0
GPU: box "GPU"
line from GPU.s to 1/2 <KEY.se, MEM.sw>
line from IP.e to A.w
line from RAM.e to ALU.w
line from CROM.e to SP.w
line from KEY.e to MEM.w
.PE

RAM Module Diagram:
.PS
MAR: box "MAR"
move down 0.7 left 0
RAM0: box "RAM0"; move left 0.1
RAM1: box "RAM1"; move left 0.1
BUSH: line from MAR.ne+(0.2, 0) down 2
BUSL: line from MAR.ne+(0.3, 0) down 2
line from MAR.e right 0.3; circle radius 0.025 fill color "black" at MAR.e+(0.2, 0)
line from MAR.s down 0.2; line from MAR.s down 0.1 then left (MAR.x - RAM1.x) then down 0.1
line from MAR.s down 0.1 then left (MAR.x - RAM0.x) then down 0.1
line from RAM0.s down 0.1 then right (BUSL.x - RAM0.x)
line from RAM1.s down 0.3 then right
[ line up 0.05 then up 0.1 right 0.1 then down 0.3 then up 0.1 left 0.1 then up 0.05 ]
line from 1/3 <last [].ne, last [].se> right (BUSH.x - last [].e.x)
line from 2/3 <last [].ne, last [].se> right (BUSL.x - last [].e.x)
.PE

Booting Circuit Diagram:
.PS
"CLK" above; line down
box "1:2"
move down left
box "SHR counter"
for i = 1 to 4 do {
  line from (i/5 <last box.w,last box.e>,last box.s) down 0.1
}
.PE

ALU Diagram:
.PS
down
box "X"
arrow 0.25
box "+"
arrow <- 0.25
box "X"
.PE

X: box "X"
arrow from X.s down 0.2 then right
ADDER: box "+" with .w at last arrow .end - (0, 0.05)
arrow <- from ADDER.w - (0, 0.05) left then down 0.2
box "16 xor"
arrow <- down 0.2
Y: box "Y"
line from ADDER.e right 0.3
buffer(0.2)
line right 0.3
line from last line.e + (0, -1.2) to last line.e + (0, 0.6)

GPU:
.PS
up
ADDR: box "ADDR"
line from last box .e right 1 then up
ATTR: box "ATTR"
line
PATT: box "PATT"
line
SHR: box "SHR"
arrow right from last box .e
box "VGA"
line from last box .s down
box "signal"
BUS: line from ADDR.s-(1,0) up (SHR.n.y-ADDR.s.y)
line from (BUS,ADDR) to ADDR.w
line from (BUS,PATT) right
[ line from last line.e+(0.1,0) up 0.2 then left 0.1 down 0.05 then down 0.3 then down 0.05 right 0.1 then up 0.2 ]
line from 1/4<last [].ne,last [].se> right then up 0.4 then right (SHR.x-Here.x-0.5)
line from 3/4<last [].ne,last [].se> right then down 0.4 then right (PATT.x-last [].e.x-0.5)
line from (1/2<ADDR,ATTR>,ADDR) up
line from Here+(0,0.17) left 0.1 down 0.17 then right 0.2 then up 0.17 left 0.1
line up (PATT.y+ATTR.y)/2-Here.y
.PE


Counter:
.PS
C: box "counter"
for i = 1 to 4 do { 
  line from (i/5 <C.w,C.e>,C.n) up 0.1
  line from (i/5 <C.w,C.e>,C.s) down 0.1
}
"INPUT" above at C.n+(0,0.1)
"OUTPUT" below at C.s-(0,0.1)

line from (C.e, 1/4<C.n,C.s>) right 0.1
"RESET" ljust with .w at last line .e
line from (C.e, 2/4<C.n,C.s>) right 0.1
"UP/DOWN" ljust with .w at last line .e
line from (C.e, 3/4<C.n,C.s>) right 0.1
"UPDATE" ljust with .w at last line .e
.PE
